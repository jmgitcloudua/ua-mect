//ListMove
// Start at head (or current position) and move forward until newPos.
    // vvv SOLUTION vvv
    if (l->currentPos == -1 || newPos < l->currentPos) {
      l->current = l->head;
      l->currentPos = 0;
    }
    for (int i = l->currentPos; i < newPos; i++) {
      l->current = l->current->next;
    }
    // ^^^ SOLUTION ^^^
    
  }
  l->currentPos = newPos;

//ListSearch
// vvv SOLUTION vvv
  int end = l->size;
  int pos = 0;
  struct _ListNode* sn = l->head;
  int cmp = 1;
  while (pos < end) {
    cmp = l->compare(p, sn->item);
    if (cmp <= 0) break;
    pos++;
    sn = sn->next;
  }
  if (cmp != 0) return -1;
  l->current = sn;
  l->currentPos = pos;
  // ^^^ SOLUTION ^^^
  
  return 0;

  //ListRemoveCurrent
   // vvv SOLUTION vvv
    struct _ListNode* sn = l->head;
    while (sn->next != l->current) sn = sn->next;
    sn->next = l->current->next;
    free(l->current);
    l->current = sn->next;
    l->size--;
    // ^^^ SOLUTION ^^^
    
  }
  return item;

