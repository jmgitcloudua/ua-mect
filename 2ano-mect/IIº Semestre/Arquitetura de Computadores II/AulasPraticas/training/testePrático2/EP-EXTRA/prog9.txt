#include <detpic32.h>

volatile unsigned char voltage = 0;
volatile unsigned int freq = 10;

void configIO(){

  TRISB = (TRISB & 0x80FF); //config RB14-RB8 as output
  LATB = (LATB & 0x80FF); //set initial value

  TRISD = (TRISD & 0xF9FF); //config RD6-RD5 as output
  LATD = (LATD & 0xF9FF); //set initial value
}

void delay(int ms){
  for(; ms > 0; ms--){
    resetCoreTimer();
    while(readCoreTimer() < 20000);
  }
}
unsigned char toBCD(unsigned char value ){
 return ((value / 10) << 4) + (value % 10);
}
void send2display(unsigned char value){
  static cons char display7seg = {};
  static char displayFlag = 0;
  
  int digit_low = value & 0x0F;
  int digit_high = value >> 4;

  if(displayFlag == 0){
    LATB = (LATB & 0x00FF) | (display7seg[digit_low] << 8);
    LATDbits.LATD5 = 0;
    LATDbits.LATD6 = 1;
 }else{
   LATB = (LATB & 0x00FF) | (display7seg[digit_high] << 8);
   LATDbits.LATD5 = 1;
   LATDbits.LATD6 = 0;
 }

 displayFlag = !displayFlag;
}
void configADC(){
 TRISBbits.TRIB4 = 1;
 TRISBbits.TRISBx = 1;
 AD1PCFGbits.PCFGx= 0;
 AD1CON1bits.SSRC = 7; 
 AD1CON1bits.CLRASAM = 1; 
 AD1CON3bits.SAMC = 16;  
 AD1CON2bits.SMPI = 4-1; 
 AD1CHSbits.CH0SA = 4; 
 AD1CON1bits.ON = 1; // Enable A/D converter

 IPC6bits.AD1IP = 2;
 IFS1bits.AD1IF = 0;
 IEC1bits.AD1IE = 1;
}
void _int_(27) isr_adc(void){
   int sum = 0;
   int *p = (int *)(&ADC1BUF0);
   for(; p < (int *)(&ADC1BUF0); p+=4){
      sum += *p;
   }
    double avg = (double)sum/4.0
      voltage = (char)(avg*33)/1023;

  IFS1bits.AD1IF = 0;  
}
void configT2(){
 T2CONbits.TCKPS = 2; //Kpres = 4 | fout_presc = 5MHz
 PR2 = 49999; //PR2 = (fout_presc/100) - 1
 TMR2 = 0; 
 T2CONbits.TON = 1;  

 IPC2bits.T2IP = 2; // Interrupt priority (must be in range [1..6]) 
 IEC0bits.T2IE = 1; // Enable timer T2 interrupts 
 IFS0bits.T2IF = 0; // Reset timer T2 interrupt flag 

}
void _int_(8) isr_T2(void){
  send2display(toBCD(freq));
  IFS1bits.T2IF = 0;
}
void putc(char byte2send){
 while(U1STAbits.U1TXBF == 0);
  U1TXRG = byte2send;
}
void putS(String *str){ 
  if(*str != '\0'){
    putc(*str);
    str++;
   }
}
void portValue(unsigned char value){
  if((value & 0x0001) == 0x0000){
     putc('0');
   }else{
     putc('1');
   }
}
void configUART1(){
  U1BRG = ((PBCLK + 1200*8)/(16*1200)) - 1;
  U1MODEbits.BRGH = 0;
  U1MODEbits.PDSEL = 0;//no parity
  U1MODEbits.STSEL = 1; //1 stop bit

  U1STAbits.URXEN = 1;
  U1STAbits.UTXEN = 1;
  
  U1MODEbits.ON = 1; //UART1 enabled  
  
}
int main(void){
  printStr("Preparation for Test2 - AC2");

  configIO();
  configADC();
  configT2();
  configUART1();

  EnableInterrupts();//enable global interrupt

 while(1){
  
  AD1CON1bits.ASAM = 1; //start conversion
  
  putS("\n Value in swithes : ");
  portValue(PORTBbits.RB0);
  portValue(PORTBbits.RB1);
  portValue(PORTBbits.RB2);
  portValue(PORTBbits.RB3);

  putS("\n Frequency: ");
  printInt(freq, 10);
  
  freq = 10 + (voltage*10)/255;
  delay(1000/freq);
  
 }

 return 0;
}
