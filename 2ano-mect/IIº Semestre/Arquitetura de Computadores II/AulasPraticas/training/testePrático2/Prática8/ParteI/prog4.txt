#include <detpic32.h>

void delay(int ms){
 for(; ms > 0; ms--){  
   resetCoreTimer();
   while(readCoreTimer() < 20000);
 }
}
void configUART(unsigned int baud, char parity, unsigned int stopbits){
 if(baud < 600 || buad > 115200){
    baud = 115200;
 }
 if(parity != 'N' || parity != 'E' || parity != 'O'){
    parity = 'N'
 }
  if(stopbits != 1 || stopbits != 2){
    stopbits = 1
 }
 //UART2 config
 U2BRG = ((PBCLK + 8*baud)/(16*baud)) - 1; //constat baudrate
 U2MODEbits.BRGH = 0; //16x baud clock is enabled
 //config parity | 8 bits
 switch(parity){
  case 'N':
   U2MODEbits.PDSEL = 0; //no parity
   break;
   case 'E':
   U2MODEbits.PDSEL = 1; //even parity
   break;
   case 'O':
   U2MODEbits.PDSEL = 2; //odd parity
   break;
 }
  //config stop bits
   switch(stopbits){
  case 2:
   U2MODEbits.STSEL = 1; //2 stop bits
   break;
   case 1:
   U2MODEbits.PDSEL = 0; //1 stop bits
   break;
 }
 U2MODEbits.URXEN = 1;// U2 RX is enabled
 U2MODEbits.UTXEN = 1;// U2 TX is enabled
 U2MODEbits.ON = 1;// U2 is enabled
 
}
void putc(char byte2send){
 while(U2STAbits.UTXBF == 1);
  U2TXREG = byte2send;
}
void puts(String *str){
  if(*str != '\n'){~
   putc(*str);
   str++;
  }
}
int main(void){
    //configUart(600, 'N', 1);
    //configUart(1200, 'O', 2);
    //configUart(9600, 'E', 1);
    //configUart(19200, 'N', 2);
    //configUart(115200, 'N', 1);
   
    TRISBbits.TRISB6 = 0; //config RB6 as output
    LATBbits.LATB6 = 0; //set initial value
    int TMRT_VAL;
    while (1)
    {
        resetCoreTimer(); //we want to measure time 

        while(U2STAbits.TMRT == 1);//wait until TRMT == 1
         LATBbits.LATB6 = 1; // RB6 is set
        puts("12345\n");
        delay(1000); //wait 1 second
        LATBbits.LATB6 = 0; // RB6 is set
   
       TMRT_VAL = readCoreTimer();
       printStr("\nTime:");
       printInt10(TMRT_VAL*50);
       printStr("ns");
    }

    return 0;
}